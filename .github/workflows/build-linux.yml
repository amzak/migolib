name: build linux

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        target: [ "linux-x64", "win-x64" ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Git semver
      uses: paulhatch/semantic-version@v4.0.2
      id: semver
      with:
        tag_prefix: "v"
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"
        format: "${major}.${minor}.${patch}-${increment}"
        short_tags: true
        bump_each_commit: false      
    - name: Show current version
      run: |
        echo 'Building version ${{steps.semver.outputs.version}}'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install dependencies
      run: dotnet restore src
    - name: Build
      run: dotnet publish src -c Release -r ${{matrix.target}} --self-contained
    - name: Run tests
      run: dotnet test src
    - name: Zip artifacts
      uses: papeloto/action-zip@v1
      with:
        files: build/bin/MigoToolGui/net5.0/${{matrix.target}}/publish/ build/bin/MigoToolCli/net5.0/${{matrix.target}}/publish/ LICENSE
        dest: release_${{matrix.target}}_${{steps.semver.outputs.version}}.zip
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: release_${{matrix.target}}_${{steps.semver.outputs.version}}
        path: |
          release_${{matrix.target}}_${{steps.semver.outputs.version}}.zip
        if-no-files-found: error
  publish:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
    - uses: actions/download-artifact@v2
      id: download
    - name: Display structure of downloaded files
      run: ls -R
    - name: Publish pre-release
      uses: marvinpinto/action-automatic-releases@latest
      if: false == startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          ${{steps.download.outputs.download-path}}/
    - name: Publish release
      uses: marvinpinto/action-automatic-releases@latest
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        title: "Release Build"
        files: |
          {{steps.download.outputs.download-path}}/